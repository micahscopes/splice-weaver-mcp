name: Default Benchmark
description: Comprehensive LLM performance evaluation
iterations: 10
timeout_seconds: 30
models:
- name: gpt-3.5-turbo
  endpoint: http://localhost:1234/v1
  api_key: null
  parameters: {}
test_scenarios:
- name: Basic Function Search
  category: AST Search
  prompt: 'Find all function declarations in this JavaScript code: function hello() { return ''world''; } const greet = () => ''hi'';'
  expected_tools:
  - execute_rule
  success_criteria: tool_calls > 0 && response.contains('function')
  weight: 1.0
- name: Variable Refactoring
  category: Code Transformation
  prompt: 'Replace all var declarations with const/let in: var x = 1; var y = 2; function test() { var z = 3; }'
  expected_tools:
  - execute_rule
  success_criteria: tool_calls > 0 && response.contains('const') || response.contains('let')
  weight: 1.5
- name: Scope Analysis
  category: Structural Analysis
  prompt: 'Find the containing scope around line 1, column 15 in: function outer() { function inner() { const x = 1; } }'
  expected_tools:
  - find_scope
  success_criteria: tool_calls > 0 && success == true
  weight: 2.0
- name: Error Handling Patterns
  category: Pattern Recognition
  prompt: 'Find all try-catch blocks and identify error handling patterns in: try { riskyOperation(); } catch (e) { console.error(e); } finally { cleanup(); }'
  expected_tools:
  - execute_rule
  success_criteria: tool_calls > 0 && response.contains('try') && response.contains('catch')
  weight: 1.5
- name: Complex Refactoring
  category: Advanced Transformation
  prompt: 'Modernize this React class component to functional component with hooks: class Counter extends React.Component { constructor(props) { super(props); this.state = { count: 0 }; } render() { return <div>{this.state.count}</div>; } }'
  expected_tools:
  - execute_rule
  success_criteria: tool_calls > 0 && response.contains('useState') || response.contains('function')
  weight: 3.0
statistical_config:
  confidence_level: 0.95
  min_sample_size: 10
  max_sample_size: 100
  significance_threshold: 0.05
  outlier_detection: true
export_config:
  formats:
  - json
  - csv
  - html
  output_directory: benchmark_results
  include_raw_data: true
  include_charts: true
